apiVersion: argoproj.io/v1alpha1
kind: CronWorkflow
metadata:
  name: jellyfin-mpv-builder
spec:
  schedule: "0 0 * * 0"
  concurrencyPolicy: "Replace"
  startingDeadlineSeconds: 0
  workflowSpec:
    entrypoint: build-all
    serviceAccountName: argo-workflow
    templates:
      - name: build-all
        dag:
          tasks:
            - name: push
              template: push-final
              dependencies: [combine]
              arguments:
                artifacts:
                  - name: image
                    from: "{{tasks.cmbline.outputs.artifacts.container-image}}"

            - name: combine
              template: combine-images
              dependencies: [build-arm64, build-amd64]
              arguments:
                artifacts:
                  - name: amd64-image
                    from: "{{tasks.build-amd64.outputs.artifacts.container-image}}"
                  - name: arm64-image
                    from: "{{tasks.build-arm64.outputs.artifacts.container-image}}"

            - name: build-arm64
              template: buildah-build
              arguments:
                parameters:
                  - name: platform
                    value: arm64
            - name: build-amd64
              template: buildah-build
              arguments:
                parameters:
                  - name: platform
                    value: amd64

      - name: push-final
        inputs:
          artifacts:
            - name: image
              path: /image
        container:
          name: buildah
          image: quay.io/buildah/stable:latest
          workingDir: /
          command:
            - sh
          args:
            - -x
            - -eu
            - -c
            - |
              IMAGE="$(buildah pull "oci-archive:/image" | tail -n 1)"
              TAG="cr.local.ongy.net/jellyfin-mpv-shim:$(date -u --rfc-3339=date)"
              buildah push "${TAG}" docker:"${TAG}"

      - name: combine-images
        inputs:
          artifacts:
            - name: amd64-image
              path: /images/amd64
            - name: arm64-image
              path: /images/arm64
        outputs:
          artifacts:
            - name: container-image
              path: /out/image
        container:
          name: buildah
          image: quay.io/buildah/stable:latest
          workingDir: /
          command:
            - sh
          args:
            - -x
            - -eu
            - -c
            - |
              mkdir -p /out
              TAG="cr.local.ongy.net/jellyfin-mpv-shim:$(date -u --rfc-3339=date)"
              buildah manifest create "${TAG}"

              for arch in /images/*; do
                IMAGE="$(buildah pull "oci-archive:${arch}" | tail -n 1)"
                buildah manifest add "${TAG}" "${IMAGE}"
              done

              buildah manifest push "${TAG}" oci-archive:/out/image

      - name: buildah-build
        inputs:
          parameters:
            - name: platform
          artifacts:
            - name: source
              path: /src
              git:
                repo: https://git.local.ongy.net/ongy/dockerfiles.git
                revision: HEAD
        outputs:
          artifacts:
            - name: container-image
              path: /out/image
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: kubernetes.io/arch
                      operator: In
                      values:
                        - "{{ inputs.parameters.platform }}"
        container:
          name: buildah
          image: quay.io/buildah/stable:latest
          workingDir: /src
          securityContext:
            privileged: true # For fuse access
          command:
            - sh
          args:
            - -x
            - -eu
            - -c
            - |
              mkdir -p /out
              buildah bud --platform linux/{{inputs.parameters.platform}} -f jellyfin-mpv/Dockerfile --tag cr.local.ongy.net:jellyfin-mpv-{{inputs.parameters.platform}} jellyfin-mpv
              buildah push cr.local.ongy.net:jellyfin-mpv-{{inputs.parameters.platform}} oci-archive:/out/image
